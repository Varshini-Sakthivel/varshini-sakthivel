class Solution {
    // Function to get the maximum total value in the knapsack.
    double fractionalKnapsack(int w, Item arr[], int n) {
        // this is a datatype called comparator using item,this items can hold both weight and value in a single item.it means item(weight,value)
// this can be access by using if we take item as A then access by A.value and A.weight;
        Arrays.sort(arr,new Comparator<Item>(){
            public int compare(Item A,Item B){
                double a=(double)A.value/A.weight;
                double b=(double)B.value/B.weight;
                if(a<b)
                  return 1;
                else if(a>b)
                  return -1;
                return 0;  
            }
        });
        double total=0;
        for(int i=0;i<n;i++){
            if(arr[i].weight<=w){
             total+=arr[i].value;
             w=w-arr[i].weight;
            }
            else {
             double temp=(double)(arr[i].value)*((double)w/arr[i].weight);
             total+=temp;
             return total;
            }
             
        }
        return total;
        
    }
