class Solution {
    public int uniquePathsIII(int[][] grid) {
        int row=grid.length;
        int col=grid[0].length;
        int i=0;
        int j=0;
        int zer=0;
        for(int k=0;k<row;k++){
            for(int l=0;l<col;l++){
                if(grid[k][l]==1){
                    i=k;
                    j=l;
                }
                if(grid[k][l]==0){
                    zer++;
                }
            }
        }
        int ans= helper(row,col,grid,i,j,zer);
        return ans;
    }
    private int helper(int row,int col,int [][]grid,int i,int j,int zer){
        if(i<0 || j<0 || i>=row || j>=col || grid[i][j]==-1)
           return 0;
        else if(grid[i][j]==2)
           return (zer==-1)? 1:0;  
        else{
            grid[i][j]=-1;
            zer--;
            int total=helper(row,col,grid,i-1,j,zer)+helper(row,col,grid,i,j-1,zer)+helper(row,col,grid,i+1,j,zer)+helper(row,col,grid,i,j+1,zer);
            zer++;
            grid[i][j]=0;
            return total;
        }   

    }
}
